# This file defines the contenttypes on the website. See the documentation for
# details: http://docs.bolt.cm/content#defining-contenttypes


# Entries can be used for things like 'news' or 'blogpostings'. They have a 'teaser',
# which can be used for a short blurb on listing-pages, allowing visitors to
# click-through to the rest of the entry. It also has fields for an image and an
# optional video.
# A relation is defined to the pages contenttype. This way you can refer to a page
# from your news-item.
# This contenttype defines 'categories' and 'tags' as taxonomies, allowing the
# editor to use both to categorize a specific entry.
# The 'sort' is set to "datepublish DESC", which means that newer entries will
# show above older entries.

entries:
    name: Entries
    singular_name: Entry
    fields:
        title:
            type: text
            class: large
        slug:
            type: slug
            uses: title
        image:
            type: image
        teaser:
            type: html
            height: 150px
        video:
            type: video
        body:
            type: html
            height: 300px
    relations:
        pages:
          multiple: false
          order: title
          label: Select a page
    taxonomy: [ categories, tags ]
    record_template: entry.twig
    listing_template: listing.twig
    listing_records: 10
    default_status: publish
    sort: datepublish DESC
    recordsperpage: 10

# Pages can be used for the more 'static' pages on your site. Things like
# 'about us', 'contact' or a 'disclaimer'. This content-type has a 'templateselect'
# field, which allows you to override the record_template setting for an
# individual page.
# The taxonomy for this contenttype is defined as 'chapters', which is a so-called
# "grouping" taxonomy. This way you can easily group sets of pages that logically
# belong together. If your site has a 'services' section, in which you'd like to
# list the different types of services a company provides, you can group these
# together.

pages:
    name: Pages
    singular_name: Page
    fields:
        title:
            type: text
            class: large
        slug:
            type: slug
            uses: title
        image:
            type: image
        teaser:
            type: html
            height: 150px
        body:
            type: html
            height: 300px
        template:
            type: templateselect
            filter: '*.twig'
    taxonomy: [ chapters ]
    recordsperpage: 100

# The 'Kitchensink' is not particularly useful in most cases, but it does a good
# job of showcasing most of the available fieldtypes. Feel free to delete it, or
# copy some fields to your own contenttypes.
# Since no templates are defined for this contenttype, the default record_template,
# listing_template, and related settings are used from config.yml

kitchensink:
    name: Kitchensinks
    singular_name: Kitchensink
    fields:
        title:
            type: text
            class: large
            required: true
            pattern: "*{2,255}" # see: http://html5pattern.com/
        slug:
            type: slug
            uses: [ selectfield, title ]
        video:
            type: video
        html:
            type: html
            height: 150px
        geolocation:
            type: geolocation
        image:
            type: image
            attrib: title
            extensions: [ gif, jpg, png ]
        imagelist:
            type: imagelist
        file:
            type: file
        filelist:
            type: filelist
        checkbox:
            type: checkbox
            label: "This is a checkbox"
        markdown:
            prefix: "<em>This short text comes before the actual field.</em>"
            type: markdown
            postfix: "<hr>"
        textarea:
            type: textarea
        template:
            type: templateselect
            filter: '*.twig'
        datetime:
            type: datetime
            default: "2000-01-01"
        date:
            type: date
            default: "first day of last month"
        integerfield:
            type: integer
            index: true
        floatfield:
            type: float
        selectfield:
            type: select
            values: [ none, foo, bar ]
        multiselect:
            type: select
            values: [ A-tuin, Donatello, Rafael, Leonardo, Michelangelo, Koopa, Squirtle ]
            multiple: true
            postfix: "Select your favourite turtle(s)."
        selectentry:
            type: select
            values: entries/id,title
            postfix: "Select an entry"
    relations:
        entries:
            multiple: false
            label: Choose an entry
            order: -id
            format: "{{ item.title|escape }} <span>(â„– {{ item.id }})</span>"
        pages:
            multiple: true
            order: title
            label: Select zero or more pages
    taxonomy: [ categories, tags, chapters ]
    show_on_dashboard: true
    default_status: publish
    searchable: false


# possible field types:
# text - varchar(256) - input type text.
# integer - integer - Input field for integer numbers.
# float - double - Input field for floating numbers, stored as 'Double'.
# geolocation - text (65kb) - Input field for geolocation. Enter an address, and the location is geocoded to latitude/longitude coordinates
# imagelist - text (65kb) - Input type for imagelists. Add multiple images with a description. Useful for image sliders, galleries, etcetera.
# image - varchar(256) - image select/upload widget, stored as filename.
# file - varchar(256) - file select/upload widget, stored as filename.
# filelist - text (65kb) - Input type for a list of files. Including a description.
# video - varchar(256) - Video embed widget, stored as filename.
# html - text (65kb) - wysiwyg element.
# textarea - varchar(32768) - Simple, plain < textarea > field.
# markdown - varchar(32768) - Simple, plain < textarea > field, which is parsed as Markdown text.
# datetime - datetime - date and time selector widget.
# date - datetime - date selector widget.
# select - varchar(256) - select with predefined values
# templateselect - varchar(256) - select with template filenames
# checkbox - integer - checkbox-field which is 1 (checked) or 0 (unchecked)


# number (deprecated) - input type decimal(18,9), useful for storing number that need to be sortable
