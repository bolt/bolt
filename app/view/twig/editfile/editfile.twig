{# Page: NavSecondary > Configuration > Main configuration | Contenttypes | Taxonomy | ... #}

{% extends '@bolt/_base/_page-nav.twig' %}

{% block page_nav 'Settings/Configuration' %}

{% block page_title context.write_allowed ? __('page.edit-file.title.edit') : __('page.edit-file.title.view') %}

{% block page_subtitle context.basename %}

{% block page_main %}

    {% import '@bolt/_macro/_macro.twig' as macro %}
    {% from '@bolt/_buic/_moment.twig' import buic_moment %}
    {% from '@bolt/_macro/_files_path.twig' import files_path %}

    {{ data('editcontent.msg', {
        'change_quit': __('You have unfinished changes on this page. If you continue without saving, you will lose these changes.'),
        'saving':      __('Saving â€¦')
    }) }}

    {% set attr_text = {
        _bind:     ['editfile', {readonly: context.write_allowed ? false : true}],
        class:     'CodeMirror-scroll',
        id:        'form_contents',
        name:      'form[contents]',
        required:  false,
        style:     'width: 98%; min-height: 350px; white-space: pre; word-wrap: normal; overflow-x: scroll;',
    } %}

    <div class="row">
        <div class="col-xs-12">

            {{ files_path(context.pathsegments, context.namespace, {'path': '', 'namespace': context.namespace}) }}

            {{ widgets('editfile_below_header', 'backend') }}

            <form method="post" class="form-inline" id="editfile" autocomplete="off">
                {{ form_widget(context.form._token) }}

                <div>
                    <textarea{{ macro.attr(attr_text) }}>{{ context.form.vars.value.contents }}</textarea>
                </div>

                <div>
                    <button type="button" id="saveeditfile" class="btn btn-primary" {% if not context.write_allowed %}disabled{% endif %}>
                        <i class="fa fa-flag"></i> {{ __('page.edit-file.button.save') }}
                    </button>
                    <a class="btn btn-default confirm {% if not context.write_allowed %}disabled{% endif %}" style="margin-left: 24px;"
                       data-confirm="{{ __("page.edit-file.confirm-revert") }}"
                       href="{{ path('fileedit', {'namespace': context.namespace, 'file': context.file}) }}"
                    >
                        <i class="fa fa-undo"></i> {{ __("page.edit-file.button.revert") }}
                    </a>

                  <div class="relatedfiles">
                    {% if context.filegroup|length > 1 %}
                      {{ __("page.edit-file.note-related") }}
                      {% for related in context.filegroup %}
                        {% if related != context.basename %}
                          <a class="btn btn-tertiary btn-small" href="{{ path('fileedit', {'namespace': context.namespace, 'file': context.additionalpath ~ related}) }}">{{ related }}</a>
                        {% endif %}
                      {% endfor %}
                    {% endif %}
                  </div>
                </div>

            <p class="lastsaved" style="padding-top: 12px;">
                {{ __('Saved on:') }}
                <strong>{{ context.datechanged|localdate("%c") }}</strong>
                ({{ buic_moment(context.datechanged) }})
            </p>

            </form>

            {{ widgets('editfile_bottom', 'backend') }}

        </div>
    </div>

    {% if context.filetype in ['twig', 'html', 'htm'] %}
        {% set codemirror = ['xml', 'javascript', 'css', 'htmlmixed'] %}
    {% elseif context.filetype == "php" %}
        {% set codemirror = ['matchbrackets', 'javascript', 'css', 'htmlmixed', 'clike', 'php'] %}
    {% elseif context.filetype == "yml" %}
        {% set codemirror = ['yaml'] %}
    {% elseif context.filetype == "md" %}
        {% set codemirror = ['markdown'] %}
    {% elseif context.filetype in ['css', 'less'] %}
        {% set codemirror = ['css'] %}
    {% elseif context.filetype == "js" %}
        {% set codemirror = ['javascript'] %}
    {% else %}
        {% set codemirror = [] %}
    {% endif %}

    {# use the files includes in ckeditor/codemirror plugin, instead of duplicating files. #}
    <link rel="stylesheet" property="stylesheet" href="{{ paths.app }}view/js/ckeditor/plugins/codemirror/css/codemirror.min.css">
    <script src="{{ paths.app }}view/js/ckeditor/ckeditor.js"></script>
    <script src="{{ paths.app }}view/js/ckeditor/plugins/codemirror/js/codemirror.min.js"></script>
    <script src="{{ paths.app }}view/js/ckeditor/plugins/codemirror/js/codemirror.addons.search.min.js"></script>
    {% for file in codemirror %}
        <script src="{{ paths.app }}view/js/ckeditor/plugins/codemirror/plugins/{{ file }}.min.js"></script>
    {% endfor %}

{% endblock page_main %}
