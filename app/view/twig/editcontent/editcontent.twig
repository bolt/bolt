{# Page: NavSecondary > Content ... > Edit #}

{% import '_macro/_macro.twig' as macro %}

{% extends '_base/_page-nav.twig' %}

{% block page_nav 'Content/*' %}

{% block page_title %}
    {% set contenttype = {'%contenttype%': context.contenttype.slug} %}
    {% if context.content.title is not empty %}
        {{ __('contenttypes.generic.edit', contenttype) }}
    {% else %}
        {{ __('contenttypes.generic.new', contenttype) }}
    {% endif %}
{% endblock page_title %}

{% block page_subtitle context.content.title|default('') %}

{# clear default messages, because we use them in a different spot, in this template #}
{% block messages "" %}

{% block page_main %}

    {% set has = {
        incoming_relations: context.content.relation is not empty,
        relations:          context.contenttype.relations is defined,
        tabs:               context.contenttype.groups != false,
        taxonomy:           context.contenttype.taxonomy is defined,
    } %}

    {% set status_names = {"published": __("Published"), "held": __("Not published"), "timed": __("Timed publish"), "draft": __("Draft")} %}

    {% set dateChanged %}{{ macro.datetime(context.content.datechanged) }}{% endset %}

    {% set bind_data = {
        savedon:        __('Saved on:') ~ ' <strong></strong> <small>(' ~ dateChanged ~ ')</small></p>',
        newRecord:      context.content.id != 0 ? false : true,
        msgNotSaved:    __('contenttypes.generic.saving-impossible', {'%contenttype%': context.contenttype.slug}),
        pathsRoot:      paths.root,
        msgSaving:      __('Saving â€¦'),
        hasGroups:      has.tabs,
        singularSlug:   context.contenttype.singular_slug,
    } %}

    {% set attr_form = {
        _bind:   ['editcontent', bind_data],
        class:   "form-horizontal" ~ (has.tabs ? ' tab-content' : ''),
        enctype: "multipart/form-data",
        id:      "editcontent",
        method:  "post",
        role:    "form",
    } %}

    {# Build tab groups list #}

    {% set tabgroups = {} %}
    {% for group in context.contenttype.groups %}
        {% if group == 'ungrouped' %}
            {% set tabgroups = tabgroups|merge({(group): __('contenttypes.generic.group.ungrouped')}) %}
        {% elseif group != 'meta' and group != 'taxonomy' %}
            {% set label = __(['contenttypes', context.contenttype.slug, 'group', group], {DEFAULT: group|capitalize}) %}
            {% set tabgroups = tabgroups|merge({(group): label}) %}
        {% endif %}
    {% else %}
        {% set tabgroups = {'ungrouped': ''} %}
    {% endfor %}

    {% if has.relations and has.taxonomy %}
        {% set label = __('contenttypes.generic.group.relations') ~ '/' ~ __('contenttypes.generic.group.taxonomy') %}
        {% set tabgroups = tabgroups|merge({'taxonomy': label}) %}
    {% elseif has.relations %}
        {% set tabgroups = tabgroups|merge({'taxonomy': __('contenttypes.generic.group.relations')}) %}
    {% elseif has.taxonomy or 'taxonomy' in context.contenttype.groups %}
        {% set tabgroups = tabgroups|merge({'taxonomy': __('contenttypes.generic.group.taxonomy')}) %}
    {% endif %}

    {% set tabgroups = tabgroups|merge({'meta': __('contenttypes.generic.group.meta')}) %}

    {% set active_group = tabgroups|keys|first %}

    <div class="row">
        <div class="col-md-8">

            {% include '_sub/_messages.twig' %}

            {# Only if we have grouping tabs. #}
            {% if has.tabs %}
                <ul class="nav nav-tabs" id="filtertabs">
                    {% for group, name in tabgroups %}
                        <li{{ group == active_group ? ' class="active"' : '' }}>
                            <a href="#tab-{{ group }}" data-toggle="tab">{{ name }}</a>
                        </li>
                    {% endfor %}
                </ul>
            {% endif %}

            <form{{ macro.attr(attr_form) }}>
                {% include '_sub/_csrf_token.twig' %}

                {% for group, name in tabgroups %}

                    {% if has.tabs %}
                        <div class="tab-pane{{ group == active_group ? ' active' : '' }}" id="tab-{{ group }}">
                    {% endif %}

                    {% if group == 'taxonomy' %}
                        {% if has.incoming_relations or has.relations %}
                            {% include 'editcontent/_relations.twig' %}
                        {% endif %}
                        {% if has.taxonomy %}
                            {% include 'editcontent/_taxonomies.twig' %}
                        {% endif %}

                    {% elseif group == 'meta' %}
                        {% include 'editcontent/_meta.twig' %}

                    {% else %}
                        {% include 'editcontent/_fields.twig' %}
                    {% endif %}

                    {% if has.tabs %}
                        </div>
                    {% endif %}

                {% endfor %}

                {% include 'editcontent/_buttons.twig' %}
            </form>

            {% include 'editcontent/_includes.twig' %}

        </div>

        <aside class="col-md-4 hidden-sm">
            {% include 'editcontent/_aside.twig' %}
        </aside>
    </div>

{% endblock page_main %}
