{# Page: NavSecondary > Content ... > Edit #}

{% import '_macro/_macro.twig' as macro %}

{% extends '_base/_page-nav.twig' %}

{% block page_nav 'Content/*' %}

{% block page_title %}
    {% set contenttype = {'%contenttype%': context.contenttype.slug} %}
    {% if context.content.title is not empty %}
        {{ __('contenttypes.generic.edit', contenttype) }}
    {% else %}
        {{ __('contenttypes.generic.new', contenttype) }}
    {% endif %}
{% endblock page_title %}

{% block page_subtitle context.content.title|default('') %}

{# clear default messages, because we use them in a different spot, in this template #}
{% block messages "" %}

{% block page_main %}

    {% set status_names = {"published": __("Published"), "held": __("Not published"), "timed": __("Timed publish"), "draft": __("Draft")} %}

    {% set dateChanged %}{{ macro.datetime(context.content.datechanged) }}{% endset %}

    {% set bind_data = {
        savedon:        __('Saved on:') ~ ' <strong></strong> <small>(' ~ dateChanged ~ ')</small></p>',
        newRecord:      context.content.id != 0 ? false : true,
        msgNotSaved:    __('contenttypes.generic.saving-impossible', {'%contenttype%': context.contenttype.slug}),
        pathsRoot:      paths.root,
        msgSaving:      __('Saving …'),
        hasGroups:      context.contenttype.groups|default is not empty,
        singularSlug:   context.contenttype.singular_slug,
    } %}

    {% set attr_form = {
        _bind:   ['editcontent', {
                    savedon:        __('Saved on:') ~ ' <strong></strong> <small>(' ~ dateChanged ~ ')</small></p>',
                    newRecord:      context.content.id != 0 ? false : true,
                    msgNotSaved:    __('contenttypes.generic.saving-impossible', {'%contenttype%': context.contenttype.slug}),
                    pathsRoot:      paths.root,
                    msgSaving:      __('Saving …'),
                    hasGroups:      context.contenttype.groups|default is not empty,
                    singularSlug:   context.contenttype.singular_slug,
                }],
        class:   "form-horizontal",
        enctype: "multipart/form-data",
        id:      "editcontent",
        method:  "post",
        role:    "form",
    } %}

    <div class="row">
        <div class="col-md-8">

            {% include '_sub/_messages.twig' %}

            {# only if we have grouping tabs. #}
            {% if context.contenttype.groups|default is not empty %}
                <ul class="nav nav-tabs" id="filtertabs">

                    {# Add an extra tab, if there are "ungrouped" fields #}
                    {% set firstfield = context.contenttype.fields|first %}
                    {% if firstfield.group is empty %}
                        <li><a class="filter" data-filter="ungrouped">{{ __('contenttypes.generic.group.ungrouped') }}</a></li>
                    {% endif %}

                    {# Defined groups #}
                    {% for group in context.contenttype.groups %}
                        <li>
                            <a class="filter" data-filter="{{ group }}">
                                {{ __(['contenttypes', context.contenttype.slug, 'group', group], {DEFAULT: group|capitalize}) }}
                            </a>
                        </li>
                    {% endfor %}

                    {# Relationships and/or Taxonomy #}
                    {% if context.contenttype.relations is defined and context.contenttype.taxonomy is defined %}
                        <li><a class="filter" data-filter="taxonomy">{{ __('contenttypes.generic.group.relations') }} / {{ __('contenttypes.generic.group.taxonomy') }}</a></li>
                    {% endif %}
                    {% if context.contenttype.relations is defined and context.contenttype.taxonomy is not defined %}
                        <li><a class="filter" data-filter="taxonomy">{{ __('contenttypes.generic.group.relations') }}</a></li>
                    {% endif %}
                    {% if context.contenttype.relations is not defined and context.contenttype.taxonomy is defined %}
                        <li><a class="filter" data-filter="taxonomy">{{ __('contenttypes.generic.group.taxonomy') }}</a></li>
                    {% endif %}

                    {# Finally, a tab for Meta #}
                    <li><a class="filter" data-filter="meta">{{ __('contenttypes.generic.group.meta') }}</a></li>

                </ul>
            {% endif %}

            <form{{ macro.attr(attr_form) }}>
                {% include '_sub/_csrf_token.twig' %}

                {% include 'editcontent/_fields.twig' %}

                {% include 'editcontent/_relations.twig' %}

                {% include 'editcontent/_taxonomies.twig' %}

                {% include 'editcontent/_meta.twig' %}

                {% include 'editcontent/_buttons.twig' %}
            </form>

        </div>

        <aside class="col-md-4 hidden-sm">
            {% include 'editcontent/_aside.twig' %}
        </aside>
    </div>

{% endblock page_main %}
