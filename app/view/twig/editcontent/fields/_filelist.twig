{#=== OPTIONS ========================================================================================================#}

{% set option = {
    extensions:  field.extensions|default([]),
    label:       field.label|default(''),
    upload:      field.upload|default(''),
    info:        field.info|default('info.upload.filelist')
}%}

{#=== INIT ===========================================================================================================#}

{% set items = stackitems(7, 'other,document') %}

{% set attr_fileupload = {
    accept:       option.extensions ? '.'~option.extensions|join(',.') : '',
    data_upload:  {type: 'FileList', key: key}|json_encode(),
    data_url:     url('upload', {'handler': option.upload}),
    id:           'fileupload-'~key,
    name:         'files[]',
    type:         'file',
    multiple:     true,
}%}

{% if context.content.get(key) is defined %}
    {% set list_json = context.content.get(key)|json_encode() %}
{% else %}
    {% set list_json = '' %}
{% endif %}

{#=== BLOCKS =========================================================================================================#}

{% import _self as block %}

{# Modal "select from server" #}
{% macro serverselect(key) %}
    <div class="modal fade" id="selectModal-{{ key }}" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content"></div>
        </div>
    </div>
{% endmacro %}

{#=== FIELDSET =======================================================================================================#}

<fieldset class="filelist">
    <label class="col-sm-12 control-label">{{ macro.infopop(labelkey, option.info) }}</label>

    <div class="col-sm-12 filelistholder dropzone" id="filelist-{{ key }}">
            <div class="list"></div>

            <div class="button-wrap">

                <span class="btn btn-secondary fileinput-button">
                    <i class="fa fa-upload"></i> <span>{{ __('Upload file') }}</span>
                    <input{{ macro.attr(attr_fileupload) }}>
                </span>

                <a data-target="#selectModal-{{ key }}" href="{{ paths.async }}browse/files?key={{ key }}" class="btn btn-tertiary fileinput-select" data-toggle="modal">
                    <i class="fa fa-download"></i> {{ __('field.general.select-from-server') }}
                </a>

                {% if items %}
                <div class="button-group" style="margin: 0 0 6px;">
                    <a class="btn btn-tertiary dropdown-toggle" data-toggle="dropdown">
                        <i class="fa fa-paperclip"></i> {{ __('field.general.select-from-stack') }}
                        <span class="caret"></span>
                    </a>

                    <ul class="dropdown-menu" id="stack-{{ key }}">
                        {% for item in items %}
                            <li>
                                <a href="#" data-action="bolt.stack.selectFromPulldown('{{ key }}', '{{ item.filepath }}');">{{ item.basename }} <small>({{ item.filesize }})</small></a>
                            </li>
                        {% endfor %}
                    </ul>
                </div>
                {% endif %}
            </div>

        <textarea name="{{ key }}" id="{{ key }}" class="hide">{{ list_json }}</textarea>

    </div>

    {{ block.serverselect(key) }}

</fieldset>
