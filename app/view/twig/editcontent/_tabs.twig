{% macro tab(filter, name) %}
    <li><a class="filter" data-filter="{{ filter }}">{{ name }}</a></li>
{% endmacro %}

{% from _self import tab %}

{% set firstfield = context.contenttype.fields|first %}
{% set has_relations = context.contenttype.relations is defined %}
{% set has_taxonomy = context.contenttype.taxonomy is defined %}
{% set exclude_group = (has_relations or has_taxonomy) ? ['ungrouped', 'taxonomy', 'meta'] : ['ungrouped', 'meta'] %}

<ul class="nav nav-tabs" id="filtertabs">

    {# Add an extra tab, if there are "ungrouped" fields #}
    {% if firstfield.group is empty or 'ungrouped' in context.contenttype.groups %}
        {{ tab('ungrouped', __('contenttypes.generic.group.ungrouped')) }}
    {% endif %}

    {# Defined groups #}
    {% for group in context.contenttype.groups %}
        {% if group not in exclude_group %}
            {{ tab(group, __(['contenttypes', context.contenttype.slug, 'group', group], {DEFAULT: group|capitalize})) }}
        {% endif %}
    {% endfor %}

    {# Relationships and/or Taxonomy #}
    {% if has_relations and has_taxonomy %}
        {{ tab('taxonomy', __('contenttypes.generic.group.relations') ~ '/' ~ __('contenttypes.generic.group.taxonomy')) }}
    {% elseif has_relations %}
        {{ tab('taxonomy', __('contenttypes.generic.group.relations')) }}
    {% elseif has_taxonomy %}
        {{ tab('taxonomy', __('contenttypes.generic.group.taxonomy')) }}
    {% endif %}

    {# Finally, a tab for Meta #}
    {{ tab('meta', __('contenttypes.generic.group.meta')) }}

</ul>
