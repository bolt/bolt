{##
 # Standard HTML page template
 #
 # Dont't use, use "_page-<nav|no_nav|popup>.twig" instead!
 #
 # Blocks: page_nav:      Navigation path, like: "Dashboard", "Settings/Configuration", "Content/*", ...
 #         page_main:     content
 #         page_title:    used as html title
 #         page_subtitle: used as html title (optional)
 #         page_script:   script added after the body tag (script tags needed!)
 #}
{%- spaceless %}

{% set page_locale_long = app.locale %}
{% set page_locale_short = page_locale_long|slice(0, 2) %}
{% set page_timezone_offset = app.timezone_offset %}

{% if block('page_subtitle') is empty %}
    {% set page_title = block('page_title') %}
{% else %}
    {% set page_title = block('page_title') ~ ' » ' ~ block('page_subtitle') %}
{% endif %}

{# TODO: Refactor this out. Too much business logic in the template. #}
{% set page_scripts_inc = [
    'js/lib.js'
] %}

{# Add locale include for datepicker #}
{% set localepath = 'js/locale/datepicker/' %}
{% if file_exists(paths.viewpath ~ '/' ~ localepath ~ page_locale_long ~ '.min.js') %}
    {% set page_scripts_inc = page_scripts_inc|merge([localepath ~ page_locale_long ~ '.min.js']) %}
{% elseif page_locale_short != 'en' and file_exists(paths.viewpath ~ '/' ~ localepath ~ page_locale_short ~ '.min.js') %}
    {% set page_scripts_inc = page_scripts_inc|merge([localepath ~ page_locale_short ~ '.min.js']) %}
{% endif %}

{# Add locale include for moment #}
{% set localepath = 'js/locale/moment/' %}
{% if file_exists(paths.viewpath ~ '/' ~ localepath ~ page_locale_long ~ '.min.js') %}
    {% set page_scripts_inc = page_scripts_inc|merge([localepath ~ page_locale_long ~ '.min.js']) %}
{% elseif page_locale_short != 'en' and file_exists(paths.viewpath ~ '/' ~ localepath ~ page_locale_short ~ '.min.js') %}
    {% set page_scripts_inc = page_scripts_inc|merge([localepath ~ page_locale_short ~ '.min.js']) %}
{% endif %}

{# Add locale include for select2 #}

{# Determine locale include for ckeditor #}
{% set localepath = 'js/locale/ckeditor/' %}
{% set page_locale_long_bcp47 = page_locale_long|replace('_', '-')|lower %}
{% if file_exists(paths.viewpath ~ '/' ~ localepath ~ page_locale_long_bcp47 ~ '.js') %}
    {% set ckeditor_lang = page_locale_long_bcp47 %}
{% else %}
    {% set ckeditor_lang = page_locale_short %}
{% endif %}

{% endspaceless -%}

<!DOCTYPE html>
<html lang="{{ page_locale_short }}">
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, height=device-height, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0">

    <title>{{ page_title|striptags|trim|raw }} – {{ app.config.get('general/branding/name') }}</title>

    <link rel="stylesheet" href="{{ asset('css/lib.css', 'bolt') }}">
    <link rel="stylesheet" href="{{ asset('css/bolt.css', 'bolt') }}">

    {% for script in page_scripts_inc -%}
        <script src="{{ asset(script, 'bolt') }}"></script>
    {% endfor %}

    <link rel="shortcut icon" href="{{ config.get('general/branding/favicon') ?: asset('img/favicon-bolt.ico', 'bolt') }}">
    <link rel="apple-touch-icon" sizes="57x57" href="{{ config.get('general/branding/apple-touch-icon') ?: asset('img/apple-touch-icon.png', 'bolt') }}">
    {% for size in ['72x72', '114x114', '144x144'] %}
        <link rel="apple-touch-icon" sizes="{{ size }}" href="{{ config.get('general/branding/apple-touch-icon-' ~ size) ?: asset('img/apple-touch-icon-' ~ size ~ '.png', 'bolt') }}">
    {% endfor %}
</head>

<body{% if page_bodyclass %} class="{{ page_bodyclass }}"{% endif %}>

    {% block page_plain %}{% endblock page_plain %}

{% set bconfig = {
    locale: {
        short: page_locale_short,
        long: page_locale_long,
    },
    timezone: {
        offset: page_timezone_offset,
    },
    buid: buid(),
    paths: {
        bolt:  paths.bolt,
        async: paths.async,
        app:   paths.app,
        root:  paths.root,
        origin: paths.rooturl
    },
    uploadConfig: {
        maxSize: app['filepermissions'].getMaxUploadSize(),
        maxSizeNice: app['filepermissions'].getMaxUploadSizeNice(),
    },
    ckeditor: {
        lang:        ckeditor_lang,
        images:      0 + config.get('general/wysiwyg/images'),
        styles:      0 + config.get('general/wysiwyg/styles'),
        tables:      0 + config.get('general/wysiwyg/tables'),
        anchor:      0 + config.get('general/wysiwyg/anchor'),
        fontcolor:   0 + config.get('general/wysiwyg/fontcolor'),
        align:       0 + config.get('general/wysiwyg/align'),
        subsuper:    0 + config.get('general/wysiwyg/subsuper'),
        embed:       0 + config.get('general/wysiwyg/embed'),
        blockquote:  0 + config.get('general/wysiwyg/blockquote'),
        ruler:       0 + config.get('general/wysiwyg/ruler'),
        strike:      0 + config.get('general/wysiwyg/strike'),
        underline:   0 + config.get('general/wysiwyg/underline'),
        codesnippet: 0 + config.get('general/wysiwyg/codesnippet'),
        specialchar: 0 + config.get('general/wysiwyg/specialchar'),
        ck:          (config.get('general/wysiwyg/ck') is iterable) ? config.get('general/wysiwyg/ck') : false,
        filebrowser: (config.get('general/wysiwyg/filebrowser') is iterable)
                        ? config.get('general/wysiwyg/filebrowser') : false,
    },
    google_api_key: config.get('general/google_api_key'),
} %}
<script src="{{ asset('js/bolt.js', 'bolt') }}" data-config="{{ bconfig|json_encode }}" data-jsdata="{{ app.jsdata|json_encode }}"></script>

{% block page_script %}
{% endblock page_script %}

</body>
</html>
