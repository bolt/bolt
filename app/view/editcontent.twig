{% include '_header.twig' with { 'active':'content' } %}
{% import '_macro.twig' as macro %}

<div class="row">

    <div class="col-lg-12">
        <h1 class="page-header">{{ title|raw }}</h1>
    </div>

    <div class="col-md-8">
{% if contenttype.groups %}
<ul class="nav nav-tabs" id="filtertabs">
    {% for groups in contenttype.groups %}
      <li><a class="filter" href="#" data-filter="{{ groups }}">{{ __(groups|capitalize) }}</a></li>
	{% endfor %}
	 <li><a class="filter" href="#" data-filter="more">{{ __('More') }}</a></li>
</ul>
{% endif %}
    <form method="post" id="editcontent" enctype="multipart/form-data" class="form-horizontal" role="form">
        {% include '_sub_csrf_token.twig' %}

        {% include '_sub_editfields.twig' %}

{% if contenttype.groups is not defined %}
        <hr>
{% endif %}

        {% include '_sub_editrelations.twig' %}

        {% include '_sub_edittaxonomies.twig' %}

        <div class="mixfield" data-mix="more">  

        <h3>
            {{ __('Meta information') }}
        </h3>

        <input type="hidden" name="editreferrer" id="editreferrer" value="{{ editreferrer|default('') }}">

        <div class="form-group">
            {{ macro.label('Id (â„–)', '', 'col-sm-4 control-label') }}
            <div class="col-sm-8">
                <input type='text' readonly=readonly name='id' value='{{ content.id }}' class="form-control narrow">
            </div>
        </div>


        <input type="hidden" name="editreferrer" id="editreferrer"{% if editreferrer is defined %} value="{{ editreferrer }}"{% endif %}>

        {% set can_publish = isallowed('contenttype:' ~ contenttype.slug ~ ':publish:' ~ content.id) %}

        <div class="form-group">
            {{ macro.label(__('Publication date:'), '', 'col-sm-4 control-label') }}
            <div class="col-sm-8">
                <input type="text" name="datepublish-dateformatted" id="datepublish-date"
                       {% if not can_publish %}disabled="disabled"{%endif%}
                       value='{{ content.datepublish|localdate('%A')|capitalize ~ content.datepublish|date(', d') ~ content.datepublish|localdate(' %B') ~ content.datepublish|date(' Y') }}' class='form-control datepicker'>
                <input type="text" name="datepublish-timeformatted" id="datepublish-time"
                       {% if not can_publish %}disabled="disabled"{%endif%}
                       value='{{ content.datepublish|date('H:i') }}' class='form-control timepicker'>
                <input type="hidden" name="datepublish" id="datepublish" value="{{ content.datepublish }}">
            </div>
        </div>

        {% if isallowed('contenttype:' ~ contenttype.slug ~ ':publish:' ~ content.id) %}
        <script>
            $('#datepublish-date, #datepublish-time').on('change', function(){
                var date = $('#datepublish-date').datepicker("getDate");
                var time = $('#datepublish-time').val() + ":00";
                if(time == ":00") time = "00:00:00";
                $('#datepublish').val($.datepicker.formatDate('yy-mm-dd', date)+" "+time);
            });
        </script>
        {% endif %}

        {% set can_depublish = isallowed('contenttype:' ~ contenttype.slug ~ ':depublish:' ~ content.id) %}

        <div class="form-group">
            {{ macro.label(__('Depublication date:'), '', 'col-sm-4 control-label') }}
            <div class="col-sm-8">
                <input type="text" name="datedepublish-dateformatted" id="datedepublish-date"
                       {% if not can_depublish %}disabled="disabled"{%endif%}
                       value='{% if content.datedepublish > '1970-01-01 01:01:01' %}{{ content.datedepublish|localdate('%A')|capitalize ~ content.datedepublish|date(', d') ~ content.datedepublish|localdate(' %B') ~ content.datedepublish|date(' Y') }}{% endif %}' class='form-control datepicker'>
                <input type="text" name="datedepublish-timeformatted" id="datedepublish-time"
                       {% if not can_depublish %}disabled="disabled"{%endif%}
                       value='{% if content.datedepublish > '1970-01-01 01:01:01' %}{{ content.datedepublish|date('H:i') }}{% endif %}' class='form-control timepicker'>
                <input type="hidden" name="datedepublish" id="datedepublish" value="{{ content.datedepublish }}">
            </div>
        </div>

        {% if isallowed('contenttype:' ~ contenttype.slug ~ ':depublish:' ~ content.id) %}
        <script>
            $('#datedepublish-date, #datedepublish-time').on('change', function(){
                var date = $('#datedepublish-date').datepicker("getDate");
                var time = $('#datedepublish-time').val() + ":00";
                $('#datedepublish').val($.datepicker.formatDate('yy-mm-dd', date)+" "+time);
            });
        </script>
        {% endif %}

        {% if content.datecreated > '1970-01-01 01:01:01' %}
        <p>{{ __('This %contenttype% was created', {'%contenttype%': contenttype.singular_name}) }}
            <time class="moment" datetime="{{ content.datecreated|date("c") }}" title="{{ content.datecreated }}">{{ content.datecreated }}</time>
            {{ __('and edited') }}
            <time class="moment" datetime="{{ content.datechanged|date("c") }}" title="{{ content.datechanged }}">{{ content.datechanged }}</time>.
            {% endif %}</p>

        <div class="form-group">
            {{ macro.label(__('Status:'), '', 'col-sm-4 control-label') }}
            <div class="col-sm-8">
                <select name="status" id="statusselect" {% if allowedStatuses|length <= 1 %}disabled="disabled"{% endif %} class="form-control narrow">
                    {% set status_names = { "published": "Published", "held": "Not published", "timed": "Timed publish", "draft": "Draft" } %}
                    {% for status in allowedStatuses %}
                        <option value="{{status}}" {% if content.status == status %}selected{% endif %}>{{ status_names[status] }}</option>
                    {% endfor %}
                </select>
            </div>
        </div>

        <div class="form-group">
            {{ macro.label(__('Owner:'), '', 'col-sm-4 control-label') }}
            <div class="col-sm-8">
                <select name="ownerid" {% if not isallowed("contenttype:" ~ contenttype.slug ~ ":change-owner:" ~ content.id) %}disabled="disabled"{% endif %} class="form-control narrow">
                    {% for user in users %}
                        <option value="{{ user.id }}" {% if contentowner and user.id == contentowner.id %}selected="selected"{% endif %}>{{user.displayname}}</option>
                    {% endfor %}
                </select>
            </div>
        </div>

        <div class="form-group">
            {{ macro.label(__('Add a comment:'), '', 'col-sm-4 control-label') }}
            <div class="col-sm-8">
                {% if isChangelogEnabled() %}
<input type="text" name="changelog-comment" id="changelog-comment" class="form-control"
{% if not isallowed("contenttype:" ~ contenttype.slug ~ ":change-owner:" ~ content.id) %}disabled="disabled"{% endif %}
placeholder="{{ __('Add a brief, optional comment to describe what\'s changed.') }}"
/>
</label>


                {% endif %}                   
            </div>
        </div>
    </div>


     <hr>

        <div class="form-group">
            <div class="col-sm-12">

                <div class="btn-group">
                    <button type="button" class="btn btn-primary" id="savecontinuebutton">
                        <i class="fa fa-flag"></i> {{  __('Save %contenttype%',{'%contenttype%': contenttype.singular_name}) }}
                    </button>
                    <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
                        <span class="caret"></span>
                        <span class="sr-only">Toggle Dropdown</span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li>
                            <button type="submit" class="btn btn-link" id="savebutton">
                                <i class="fa fa-flag"></i> {{ __('Save & return to overview') }}
                            </button>
                        </li>
                        <li>
                            <button type="submit" class="btn btn-link" id="savenewbutton">
                                <i class="fa fa-flag"></i> {{ __('Save & create new record') }}
                            </button>
                        </li>
                    </ul>
                </div>

                <div class="btn-group">
                    <button type="button" class="btn btn-default" id="previewbutton">
                        <i class="fa fa-external-link-square"></i> {{ __('Preview') }}
                    </button>
                    {% if content.status == "published" and content.link is defined %}
                        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                            <span class="caret"></span>
                            <span class="sr-only">Toggle Dropdown</span>
                        </button>
                        <ul class="dropdown-menu" role="menu">
                            <li>
                                <a href="{{ content.link }}" target="_blank">
                                    <i class="fa fa-external-link-square"></i> {{ __('View (saved version) on site') }}</a></li>
                            </a>
                            </li>
                        </ul>
                    {% endif %}
                </div>

                <p style="margin-top: 12px;">
                    {% if content.id != 0 %}
                    {{ __('Saved on:') }} <strong>{{ content.datechanged|localdate("%b %e, %H:%M") }}</strong> <small>({{ macro.datetime(content.datechanged) }})</small></p>
                {% else %}
                    {{ __('This %contenttype% has not been saved yet.', {'%contenttype%': contenttype.singular_name}) }}
                {% endif %}
                </p>

            </div>

        </div>

    </form>

    </div><!-- /span9 -->
    <aside class="col-md-4 hidden-xs">


        <div class="panel panel-default">
            <div class="panel-heading">
                <i class="fa fa-cog fa-fw"></i> {{ __('Actions for this %contenttype%',{'%contenttype%': contenttype.singular_name}) }}
            </div>

            <div class="panel-body">

                <div class="btn-group">
                    <button type="button" class="btn btn-primary" id="sidebarsavecontinuebutton">
                        <i class="fa fa-flag"></i> {{  __('Save %contenttype%',{'%contenttype%': contenttype.singular_name}) }}
                    </button>
                    <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
                        <span class="caret"></span>
                        <span class="sr-only">Toggle Dropdown</span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li>
                            <button type="submit" class="btn btn-link" id="sidebarsavebutton">
                                <i class="fa fa-flag"></i> {{ __('Save & return to overview') }}
                            </button>
                        </li>
                        <li>
                            <button type="submit" class="btn btn-link" id="sidebarsavenewbutton">
                                <i class="fa fa-flag"></i> {{ __('Save & create new record') }}
                            </button>
                        </li>
                    </ul>
                </div>

                <div class="btn-group">
                    <button type="button" class="btn btn-default" id="sidebarpreviewbutton">
                            <i class="fa fa-external-link-square"></i> {{ __('Preview') }}
                    </button>
                    {% if content.status == "published" and content.link is defined %}
                        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                            <span class="caret"></span>
                            <span class="sr-only">Toggle Dropdown</span>
                        </button>
                        <ul class="dropdown-menu pull-right" role="menu">
                            <li>
                                <a href="{{ content.link }}" target="_blank">
                                    <i class="fa fa-external-link-square"></i> {{ __('View (saved version) on site') }}</a></li>
                                </a>
                            </li>
                        </ul>
                    {% endif %}
                </div>

                <p>
                    {{ __("Current (saved) status:") }}
                    <a href="#statusselect" data-action="$('#statusselect').focus();" id="lastsavedstatus" title="{{ __("Click to change current status.") }}">
                        <strong>{{ status_names[content.status]|default(__("None")) }}</strong>
                    </a>
                </p>

                <p class="lastsaved">
                    {% if content.id != 0 %}
                    {{ __('Saved on:') }} <strong>{{ content.datechanged|localdate("%b %e, %H:%M") }}</strong> <small>({{ macro.datetime(content.datechanged) }})</small></p>
                {% else %}
                    {{ __('This %contenttype% has not been saved yet.', {'%contenttype%': contenttype.singular_name}) }}
                {% endif %}
                </p>
            </div>
        </div>


<script type="text/javascript">
    $(function() {

        // Save the page..
        $('#sidebarsavebutton').bind('click', function(e){
            $('#savebutton').trigger('click');
        });
        $('#savebutton').bind('click', function(e){

            // Re-set the changes to the form..
            $('form').watchChanges();

        });

        // Handle "save and new".
        $('#sidebarsavenewbutton, #savenewbutton').bind('click', function(e){

            // Re-set the changes to the form..
            $('form').watchChanges();

            // Do a regular post, and expect to be redirected back to the "new record" page.
            var newaction = "?returnto=new";
            $('#editcontent').attr('action', newaction).submit();

        });

        // Clicking the 'save & continue' button either triggers an 'ajaxy' post, or a regular
        // post which returns to this page. The latter happens if the record doesn't exist yet, so it doesn't
        // have an id yet.
        $('#sidebarsavecontinuebutton, #savecontinuebutton').bind('click', function(e){
            e.preventDefault();

            var newrecord = {% if content.id != 0 %}false{% else %}true{% endif %};

            // Disable the buttons, to indicate stuff is being done.
            $('#sidebarsavecontinuebutton, #savecontinuebutton').addClass('disabled');

            $('p.lastsaved').text('{{ __("Savingâ€¦") }}');

            if (newrecord) {

                // Re-set the changes to the form..
                $('form').watchChanges();

                // New record.. do a regular post, and expect to be redirected back to this page.
                var newaction = "?returnto=" + $(this).attr('id');
                $('#editcontent').attr('action', newaction).submit();
            } else {
                // Existing record. Do an 'ajaxy' post to update the record.

                // Re-set the changes to the form..
                $('form').watchChanges();

                $.post("", $( "#editcontent" ).serialize() )
                    .done(function(data) {
                        // var message = "{{ __('The changes to this %contenttype% have been saved.', {'%contenttype%': contenttype.singular_name}) }}";
                        $('p.lastsaved').html('{{ __('Saved on:') }} <strong></strong> <small>({{ macro.datetime(content.datechanged) }})</small></p>');
                        $('p.lastsaved').find('strong').text(moment().format('MMM D, HH:mm'));
                        $('p.lastsaved').find('time').attr('datetime', moment().format());
                        $('p.lastsaved').find('time').attr('title', moment().format());
                        updateMoments();

                        $('a#lastsavedstatus strong').text( $("#statusselect option:selected").text() );

                    })
                    .fail(function(){
                        $('p.lastsaved').text('{{ __('Could not save %contenttype%.', { '%contenttype%': contenttype.singular_name }) }}');
                    })
                    .always(function(){
                        // Re-enable buttons
                        $('#sidebarsavecontinuebutton, #savecontinuebutton').removeClass('disabled');
                    });
            }

        });

        // To preview the page, we set the target of the form to a new URL, and open it in a new window.
        $('#previewbutton, #sidebarpreviewbutton').bind('click', function(e){

            e.preventDefault();
            var newaction = "{{ paths.root }}" + "preview" + "/{{ contenttype.singular_slug }}";
            $('#editcontent').attr('action', newaction).attr('target', "_blank").submit();
            $('#editcontent').attr('action', '').attr('target', "_self");

        });

    });
</script>

    {{ render(path("lastmodified", {"contenttypeslug": contenttype.slug, "contentid": content.id} )) }}

    {{ render(path("showstack", {'items': 5, 'options': 'full' } )) }}

    </aside>
</div>


{% include '_footer.twig' %}
