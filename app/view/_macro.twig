{# A little collection of links for various backend entities #}

{% macro userlink(user) %}{% spaceless %}
<a href="{{ path('useredit', { 'id': user.id }) }}">
    {{- user.displayname -}}
</a>
{% endspaceless %}{% endmacro %}

{% macro contentlink_by_id(contenttype, title, content_id) %}{% spaceless %}
<a href="{{ path('editcontent', { 'contenttypeslug': contenttype.slug, 'id': content_id }) }}">
    {{- title|trimtext(70) -}}
</a>
{% endspaceless %}{% endmacro %}

{% macro contentlink(contenttype, content) %}
    {% import _self as crosslinks %}

    {% if content.title is defined %}
        {%set title = content.title %}
    {% else %}
        {%set title = content.name %}
    {% endif %}
    {{ crosslinks.contentlink_by_id(contenttype, title, content.id) }}
{% endmacro %}

{% macro changelogmutation(raw) %}
    {% set mapping = {'UPDATE': 'changed', 'INSERT': 'created', 'DELETE': 'deleted', 'HOLD': 'put on hold', 'PUBLISH': 'published', 'DRAFT': 'depublished' } %}
    {% if mapping[raw] is defined %}{{ mapping[raw] }}{%else%}{{ raw }}{%endif%}
{% endmacro %}

{# output a 'relative' datetime #}
{% macro datetime(d) %}<time class="moment" datetime="{{ d|date("c") }}" title="{{ d }}">{{ d }}</time>{% endmacro %}

{# output the required="required" attribute for field in the form. #}
{% macro requiredattr(field) %}
    {% if field.required is defined and field.required %}required="required"{% endif %}
{% endmacro %}

{# outputs tag attributes #}
{% macro attr(attributes) %}
    {% spaceless %}
        {% for attrname, value in attributes if value is not empty %}
            {% if attrname in ['required', 'checked', 'disabled', 'autofocus'] %}
                {{ attrname }}="{{ attrname }}"
            {% elseif attrname == 'name_id' %}
                name="{{ value }}" id="{{ value }}"
            {% else %}
                {{ attrname }}="{{ value }}"
            {% endif %}
        {% endfor %}
    {% endspaceless %}
{% endmacro %}

{# label text (TOD: rename to label, when other macro isn't neede anymore) #}
{% macro labeltxt(key, field) %}
    {{- field.label ?: key|ucfirst -}}
{% endmacro %}

{# label for forms when editing content #}
{% macro label(key, field, class, for) %}
    {% spaceless %}
        <label
            {# for   #} {% if for %}for="{{ for }}"{% endif %}
            {# class #} class="{{ class|default('control-label') }}"
        >
            {% if field.label %}
                {{field.label}}
            {% else %}
                {{ key|ucfirst}}
            {%endif%}
        </label>
    {% endspaceless %}
{% endmacro %}

{# Sidebar-menu blocks with links, popover (for desktop) and touch-to-show (for mobile) #}
{% macro sidebarblock(title, popoveritems, subitems, wide) %}

    {% if subitems is empty %}{% set subitems = popoveritems %}{% endif %}
    {% set name = title.label|slug()|lower() %}

    {# only display the 'root' option, if any of the subitems are allowed to be shown. #}
    {% set allowedany = false %}
    {% for item in subitems %}
        {% if item != "-" and isallowed(item.isallowed|default('dashboard')) %}
            {% set allowedany = true %}
        {% endif %}
    {% endfor %}

    {# Show stuff! #}
    {% if allowedany %}
        <li {% if wide %}class="menu-pop-wide"{% endif %}>
            <a href="" class="menu-pop" data-action="sidebar.showSidebarItems('{{name}}')" data-html="true" data-title="" data-content="{% spaceless %}{% for item in popoveritems %}
                {% if item == "-" %}
                    <hr>
                {% elseif isallowed(item.isallowed|default('dashboard')) %}
                    <a href='{{item.link}}'><i class='fa fa-{{item.icon}} fa-fw'></i> {{item.label}}</a>
                {% endif %}
            {% endfor %}{% endspaceless %}">
                <span class="fa-stack">
                    <i class="fa fa-square fa-stack-2x"></i>
                    <i class="fa fa-{{title.icon}} fa-stack-1x fa-inverse" style="color: #333;"></i>
                </span>
                {{ title.label }}
            </a>
        </li>
        {% for item in popoveritems %}
            {% if item != "-" and isallowed(item.isallowed|default('dashboard')) %}
                <li class="sub sub-{{name}}"><a href='{{item.link}}'><i class='fa fa-{{item.icon}} fa-fw'></i> {{item.label}}</a></li>
            {% endif %}
        {% endfor %}
    {% endif %}

{% endmacro %}

{% macro actionform(content, action, icon, text, confirmation_text) %}
<form action="{{ path('contentaction', { 'action': action, 'contenttypeslug': content.contenttype.slug, 'id': content.id }) }}"
      method="POST">
    {% include('_sub_csrf_token.twig') %}
    <button type="submit"
        {% if confirmation_text %}
            class="btn btn-link confirm" data-confirm="{{confirmation_text}}"
        {%else%}
            class="btn btn-link"
        {%endif%}
    >
        <i class="fa {{ icon }}"></i>
        {{ __(text) }}
    </button>
</form>
{% endmacro %}


{% macro typepopover(types) %}
    {% set types = types|default(app.config.get('general/accept_file_types')) %}
    {%  set text = __("Allowed filetypes are:") ~ "<code>" ~ types|join("</code>, <code>") ~ "</code>." %}
    <span class="label info-pop" ata-title=""
          data-html="true" data-content="{{ text }}">{{ __('Types') }}</span>
{% endmacro %}

{% macro stackbutton(file) %}
    {% if not stacked(file.newpath) %}
        <a href="#" class="btn btn-mini" data-action="stack.addToStack('{{file.newpath}}', this);">
            <i class="fa fa-paperclip"></i>
            {{ __('Place on stack') }}
        </a>
    {% endif %}
{% endmacro %}
